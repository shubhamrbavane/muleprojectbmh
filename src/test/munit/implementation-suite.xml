<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-suite.xml" />
	<munit:test name="getFlightByName-test" doc:id="acbfa369-8984-440f-be8a-590cb613f324" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock spicejet-Request" doc:id="2d1567c0-66ab-4420-a9f0-a676f9c26e34" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0317d756-c9d4-44a5-926b-ce8fb4f01db4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getFlightByNametest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getFlightByNametest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getFlightByNametest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="e2d6f484-6cd3-4fd4-881e-e28a12edd286" >
				<munit:payload value="#[readUrl('classpath://getFlightByNametest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getFlightByNametest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getFlightByNametest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getFlightByName" doc:id="b5a6e37d-dea7-4d41-bcc7-a45d3ce49940" name="getFlightByName"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a7155eea-d244-487a-b7c4-aee821c4e6e2" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getFlightByNametest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="ba7d06f6-50ea-490e-9738-0eab67a3ec75" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b7ccf966-0046-44db-945a-c4e19edbcc72" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="cebf7877-64d9-4e4c-be32-617b3092e5a8" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="3635166e-bd0d-4916-946e-b83c0bb5592e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="getAllFlights-test" doc:id="56ed1091-1344-4165-9eff-5f5a64c6ed92" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock jetairways-request" doc:id="ff36b19f-50c1-4f86-b8f6-55124fe73bef" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a1d70f0f-42b1-4dc6-9928-c45447d2a740" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getAllFlightstest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getAllFlightstest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="querryParamsVar" value="#[output application/java --- readUrl('classpath://getAllFlightstest\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getAllFlightstest\mock_variable_1.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock indigo-request" doc:id="5e983f52-f60f-4345-b649-2afafa5da9cf" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="19b66c18-41a9-4041-a4f5-652958dc58fd" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getAllFlightstest\mock_payload1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getAllFlightstest\mock_attributes1.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="querryParamsVar" value="#[output application/java --- readUrl('classpath://getAllFlightstest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getAllFlightstest\mock_variable_3.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock querryParamsVar" doc:id="b7a96cbf-6535-48ad-af0e-261d01e683af" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bb30bb02-e38a-4fe4-a433-9d6edc14996d" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="querryParamsVar" value="#[output application/java --- readUrl('classpath://getAllFlightstest\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getAllFlightstest\mock_variable_5.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock spicejet-request" doc:id="fb11b09e-ffcd-404c-b200-d4c04f181d27" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="582caa33-e826-44f7-abfc-5b9e1bd2780d" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getAllFlightstest\mock_payload2.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getAllFlightstest\mock_attributes2.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="querryParamsVar" value="#[output application/java --- readUrl('classpath://getAllFlightstest\mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getAllFlightstest\mock_variable_7.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="c822d22f-d97d-4429-92e2-7e2bb879fed2" >
				<munit:payload value="#[readUrl('classpath://getAllFlightstest\set-event_payload1.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getAllFlightstest\set-event_attributes1.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getAllFlightstest\set-event_variable_1.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getAllFlights" doc:id="7d5b7a56-d9d5-471d-bc1a-a78466abe275" name="getAllFlights"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="67ec7e04-7c31-4677-a563-59b2d94cfe0e" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getAllFlightstest::assert_expression_payload1
---
assert_expression_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="eae08fb4-7434-4fc5-8514-2e012d49a546" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1484b67a-c4fa-4d2b-888b-2cbdef2df08c" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform to JSON" doc:id="c4fe7413-77e2-4725-811c-74361786c4ef" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="9ab04642-0a17-4640-9b97-1a989722056d" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="f3524423-b830-42fb-acfe-14fd04c82719" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="cf425bfb-3835-4c6e-9e53-8d28369c304a" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
